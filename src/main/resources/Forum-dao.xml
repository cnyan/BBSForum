<?xml version="1.0" encoding="UTF-8"?>
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
       <!--xmlns:context="http://www.springframework.org/schema/context"-->
       <!--xmlns:p="http://www.springframework.org/schema/p"-->

       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

        <!--定义扫描组件-->
        <context:component-scan base-package="com.yan.dao"/>


        <!--1. 引入定义一个jdbc的配置文件-->
        <context:property-placeholder location="classpath:jdbc.properties"/>

        <!--2. 定义一个数据源-->
        <!--destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用.-->
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
              p:driverClassName="${jdbc.driverClassName}"
              p:url="${jdbc.url}"
              p:username="${jdbc.username}"
              p:password="${jdbc.password}"
        />

        <!--3. 定义一个hibernate session工厂-->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

                <property name="dataSource" ref="dataSource"/>

                <property name="packagesToScan"> <!--① 扫描基于JPA 注解的PO类-->
                        <list>
                                <value>com.yan.domain</value>
                        </list>
                </property>

                <!--② 指定hibernate属性信息-->
                <property name="hibernateProperties">
                        <props>
                                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                                <prop key="hibernate.show_sql">true</prop>
                                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                                <prop key="hibernate.cache.region.factory_class">
                                        org.hibernate.cache.ehcache.EhCacheRegionFactory
                                </prop>
                                <prop key="hibernate.cache.use_query_cache">false</prop>
                        </props>
                </property>
        </bean>


        <!--4. 定义hibernateTemplate 信息-->
        <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate"
                p:sessionFactory-ref="sessionFactory"
        />

    
</beans>